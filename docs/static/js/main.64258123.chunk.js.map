{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAGZC,mBAAS,IAHG,mBAGzCC,EAHyC,KAG7BC,EAH6B,KAuBhD,OAGE,sBAAMC,SAfa,SAACC,GAEpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAShB,SACE,uBACEO,KAAK,OACLC,MAAST,EACTU,SAzBoB,SAAEP,GAE1BF,EAAcE,EAAEQ,OAAOF,a,+BCTdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEfC,EAFe,iDAEiCC,UAAUH,GAF3C,+DAGFI,MAAOF,GAHL,cAGfG,EAHe,gBAICA,EAAKC,OAJN,uBAIbC,EAJa,EAIbA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC5B,MAAM,CAEJC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXjB,kBAgBdM,GAhBc,4CAAH,sDCCPO,EAAc,SAAC,GAAwB,IAAtBJ,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAIvC,OAFAc,QAAQC,IAAI,CAAEN,KAAIC,QAAOV,QAGvB,sBAAKgB,UAAU,2CAAf,UACE,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,kCAAKA,EAAL,WCLOS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAc,IAAD,EAEfd,mBAAS,CACjCqB,KAAM,GACNe,SAAS,IAJ8B,mBAElCC,EAFkC,KAE3BC,EAF2B,KA0BzC,OAnBAC,qBAAW,WAET1B,EAASC,GACP0B,MAAM,SAAAC,GACJC,YAAY,WAEVJ,EAAS,CAEPjB,KAAMoB,EACNL,SAAS,MAIX,UAIL,CAACtB,IAEGuB,EDrB4BM,CAAc7B,GAAlCa,EAJwB,EAI/BN,KAAee,EAJgB,EAIhBA,QAMvB,OALAN,QAAQC,IAAIK,GAMV,qCACA,oBAAIJ,UAAU,yCAAd,SAAwDlB,IAEtDsB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEX,qBAAKA,UAAU,YAAf,SAEML,EAAOJ,KAAK,SAAAC,GAAG,OACb,cAAC,EAAD,eAEMA,GADCA,EAAIC,aEgBVmB,EAnCM,WAAO,IAAD,EAGW5C,mBAAS,CAAC,cAHrB,mBAGlB6C,EAHkB,KAGN9C,EAHM,KAQzB,OACE,qCAEE,0CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAIA,6BAEI8C,EAAWtB,KAAK,SAAAT,GAAQ,OACrB,cAAC,EAAD,CAECA,SAAUA,GADLA,Y,MCpBnBgC,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.64258123.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n\r\n  \r\n  const [inputValue, setinputValue] = useState('');\r\n\r\n  const handleInputChange = ( e ) => {\r\n    \r\n    setinputValue(e.target.value);\r\n  \r\n  }\r\n\r\n  const handleSubmit = (e) =>{\r\n\r\n    e.preventDefault();\r\n    \r\n    if( inputValue.trim().length > 2 ){\r\n      setCategories( cats => [ inputValue, ...cats ] );\r\n      setinputValue('');\r\n    }\r\n\r\n    \r\n  }\r\n\r\n  return (\r\n\r\n\r\n    <form onSubmit={ handleSubmit }>\r\n      <input\r\n        type='text' \r\n        value = {inputValue}\r\n        onChange={ handleInputChange }\r\n      >\r\n\r\n      </input>\r\n    </form>\r\n\r\n\r\n  )\r\n}\r\n\r\n\r\nAddCategory.propTypes ={\r\n  setCategories: PropTypes.func.isRequired\r\n}","\r\nexport const getGifs = async( category ) =>{\r\n\r\n  const url =`https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=tPKfsbKVMrzOhqxJJthIFRl6kxXRg5oe`;\r\n  const resp = await fetch( url );\r\n  const { data }= await resp.json();\r\n\r\n  const gifs = data.map( img => {\r\n    return{\r\n\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url\r\n\r\n    }\r\n  });\r\n\r\n  return gifs;\r\n};","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n  \r\n  console.log({ id, title, url });\r\n\r\n  return (\r\n    <div className='card animate__animated animate__fadeInUp'>\r\n      <img src={url} alt={title} />\r\n      <p> {title} </p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ( {category} ) => {\r\n\r\n\r\n\r\n  const { data : images, loading } = useFetchGifs( category );\r\n  console.log(loading);\r\n\r\n  \r\n\r\n  //getGifs();\r\n  return (\r\n    <>\r\n    <h3 className=\" animate__animated animate__fadeInLeft\">{category}</h3>\r\n\r\n    { loading && <p className=\"animate__animated animate__flash\">loading</p> }\r\n\r\n      <div className=\"card-grid\">\r\n          {\r\n            images.map( img  =>(\r\n              <GifGridItem \r\n                key={img.id}\r\n                {...img }\r\n              />\r\n            ))\r\n          }\r\n      \r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import {useEffect, useState} from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) =>{\r\n\r\n  const [state, setstate] = useState({\r\n    data: [],\r\n    loading: true\r\n  });\r\n\r\n  useEffect( () =>{\r\n\r\n    getGifs( category ).\r\n      then( imgs =>{\r\n        setTimeout( () =>{\r\n\r\n          setstate({\r\n\r\n            data: imgs,\r\n            loading: false\r\n        \r\n          })\r\n\r\n        },1000)\r\n\r\n      })\r\n\r\n  }, [category]);\r\n\r\n  return state; \r\n\r\n}","import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n  \r\n   \r\n  const [categories, setCategories] = useState(['Fat Yoshi']);\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      <h2>soy algo</h2>\r\n      <AddCategory setCategories={setCategories}/>\r\n      <hr></hr>\r\n\r\n      \r\n\r\n      <ol>\r\n        {\r\n          categories.map( category => (\r\n             <GifGrid \r\n              key={category}\r\n              category={category}\r\n               />\r\n          ))\r\n        }\r\n      </ol>\r\n\r\n    </>\r\n  )\r\n\r\n}\r\n\r\n\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n \n    <GifExpertApp />,\n \n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}